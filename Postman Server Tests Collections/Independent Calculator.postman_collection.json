{
	"info": {
		"_postman_id": "1479684a-2b3a-409f-a21f-6c0b2ecb6077",
		"name": "Independent Calculator",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23673357"
	},
	"item": [
		{
			"name": "Plus Success",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Correct Result\", function () {\r",
							"    console.log(\"This is a test \" + pm.response.text());\r",
							"    pm.response.to.have.status(200)\r",
							"    pm.response.to.have.jsonBody(\"result\")\r",
							"    pm.expect(pm.response.json().result).to.equal(7)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"arguments\": [3, 4],\r\n    \"operation\": \"plus\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8496/independent/calculate",
					"host": [
						"localhost"
					],
					"port": "8496",
					"path": [
						"independent",
						"calculate"
					]
				}
			},
			"response": []
		},
		{
			"name": "Plus Fail Not Enough",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Correct Result\", function () {\r",
							"    console.log(\"This is a test \" + pm.response.text());\r",
							"    pm.response.to.have.status(409)\r",
							"    pm.response.to.have.jsonBody(\"error-message\")\r",
							"    pm.expect(pm.response.json()[\"error-message\"]).to.equal(\"Error: Not enough arguments to perform the operation plus\")\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"arguments\": [3],\r\n    \"operation\": \"plus\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8496/independent/calculate",
					"host": [
						"localhost"
					],
					"port": "8496",
					"path": [
						"independent",
						"calculate"
					]
				}
			},
			"response": []
		},
		{
			"name": "Plus Fail Too Many",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Correct Result\", function () {\r",
							"    console.log(\"This is a test \" + pm.response.text());\r",
							"    pm.response.to.have.status(409)\r",
							"    pm.response.to.have.jsonBody(\"error-message\")\r",
							"    pm.expect(pm.response.json()[\"error-message\"]).to.equal(\"Error: Too many arguments to perform the operation plus\")\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"arguments\": [1, 2, 3],\r\n    \"operation\": \"plus\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8496/independent/calculate",
					"host": [
						"localhost"
					],
					"port": "8496",
					"path": [
						"independent",
						"calculate"
					]
				}
			},
			"response": []
		},
		{
			"name": "Minus Success",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Correct Result\", function () {\r",
							"    console.log(\"This is a test \" + pm.response.text());\r",
							"    pm.response.to.have.status(200)\r",
							"    pm.response.to.have.jsonBody(\"result\")\r",
							"    pm.expect(pm.response.json().result).to.equal(-1)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"arguments\": [3, 4],\r\n    \"operation\": \"minus\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8496/independent/calculate",
					"host": [
						"localhost"
					],
					"port": "8496",
					"path": [
						"independent",
						"calculate"
					]
				}
			},
			"response": []
		},
		{
			"name": "Times Success",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Correct Result\", function () {\r",
							"    console.log(\"This is a test \" + pm.response.text());\r",
							"    pm.response.to.have.status(200)\r",
							"    pm.response.to.have.jsonBody(\"result\")\r",
							"    pm.expect(pm.response.json().result).to.equal(12)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"arguments\": [3, 4],\r\n    \"operation\": \"Times\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8496/independent/calculate",
					"host": [
						"localhost"
					],
					"port": "8496",
					"path": [
						"independent",
						"calculate"
					]
				}
			},
			"response": []
		},
		{
			"name": "Divide Success",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Correct Result\", function () {\r",
							"    console.log(\"This is a test \" + pm.response.text());\r",
							"    pm.response.to.have.status(200)\r",
							"    pm.response.to.have.jsonBody(\"result\")\r",
							"    pm.expect(pm.response.json().result).to.equal(2)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"arguments\": [9, 4],\r\n    \"operation\": \"Divide\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8496/independent/calculate",
					"host": [
						"localhost"
					],
					"port": "8496",
					"path": [
						"independent",
						"calculate"
					]
				}
			},
			"response": []
		},
		{
			"name": "Divide Fail",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Correct Result\", function () {\r",
							"    console.log(\"This is a test \" + pm.response.text());\r",
							"    pm.response.to.have.status(409)\r",
							"    pm.response.to.have.jsonBody(\"error-message\")\r",
							"    pm.expect(pm.response.json()[\"error-message\"]).to.equal(\"Error while performing operation Divide: division by 0\")\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"arguments\": [3, 0],\r\n    \"operation\": \"Divide\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8496/independent/calculate",
					"host": [
						"localhost"
					],
					"port": "8496",
					"path": [
						"independent",
						"calculate"
					]
				}
			},
			"response": []
		},
		{
			"name": "Pow Success",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Correct Result\", function () {\r",
							"    console.log(\"This is a test \" + pm.response.text());\r",
							"    pm.response.to.have.status(200)\r",
							"    pm.response.to.have.jsonBody(\"result\")\r",
							"    pm.expect(pm.response.json().result).to.equal(8)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"arguments\": [2, 3],\r\n    \"operation\": \"Pow\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8496/independent/calculate",
					"host": [
						"localhost"
					],
					"port": "8496",
					"path": [
						"independent",
						"calculate"
					]
				}
			},
			"response": []
		},
		{
			"name": "Abs Success",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Correct Result\", function () {\r",
							"    console.log(\"This is a test \" + pm.response.text());\r",
							"    pm.response.to.have.status(200)\r",
							"    pm.response.to.have.jsonBody(\"result\")\r",
							"    pm.expect(pm.response.json().result).to.equal(3)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"arguments\": [3],\r\n    \"operation\": \"Abs\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8496/independent/calculate",
					"host": [
						"localhost"
					],
					"port": "8496",
					"path": [
						"independent",
						"calculate"
					]
				}
			},
			"response": []
		},
		{
			"name": "Abs Success 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Correct Result\", function () {\r",
							"    console.log(\"This is a test \" + pm.response.text());\r",
							"    pm.response.to.have.status(200)\r",
							"    pm.response.to.have.jsonBody(\"result\")\r",
							"    pm.expect(pm.response.json().result).to.equal(3)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"arguments\": [-3],\r\n    \"operation\": \"Abs\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8496/independent/calculate",
					"host": [
						"localhost"
					],
					"port": "8496",
					"path": [
						"independent",
						"calculate"
					]
				}
			},
			"response": []
		},
		{
			"name": "Abs Success 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Correct Result\", function () {\r",
							"    console.log(\"This is a test \" + pm.response.text());\r",
							"    pm.response.to.have.status(200)\r",
							"    pm.response.to.have.jsonBody(\"result\")\r",
							"    pm.expect(pm.response.json().result).to.equal(300)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"arguments\": [-300],\r\n    \"operation\": \"Abs\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8496/independent/calculate",
					"host": [
						"localhost"
					],
					"port": "8496",
					"path": [
						"independent",
						"calculate"
					]
				}
			},
			"response": []
		},
		{
			"name": "Abs Fail",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Correct Result\", function () {\r",
							"    console.log(\"This is a test \" + pm.response.text());\r",
							"    pm.response.to.have.status(409)\r",
							"    pm.response.to.have.jsonBody(\"error-message\")\r",
							"    pm.expect(pm.response.json()[\"error-message\"]).to.equal(\"Error: Too many arguments to perform the operation Abs\")\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"arguments\": [1, 3],\r\n    \"operation\": \"Abs\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8496/independent/calculate",
					"host": [
						"localhost"
					],
					"port": "8496",
					"path": [
						"independent",
						"calculate"
					]
				}
			},
			"response": []
		},
		{
			"name": "Fact Success",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Correct Result\", function () {\r",
							"    console.log(\"This is a test \" + pm.response.text());\r",
							"    pm.response.to.have.status(200)\r",
							"    pm.response.to.have.jsonBody(\"result\")\r",
							"    pm.expect(pm.response.json().result).to.equal(6)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"arguments\": [3],\r\n    \"operation\": \"Fact\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8496/independent/calculate",
					"host": [
						"localhost"
					],
					"port": "8496",
					"path": [
						"independent",
						"calculate"
					]
				}
			},
			"response": []
		},
		{
			"name": "Fact Success 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Correct Result\", function () {\r",
							"    console.log(\"This is a test \" + pm.response.text());\r",
							"    pm.response.to.have.status(200)\r",
							"    pm.response.to.have.jsonBody(\"result\")\r",
							"    pm.expect(pm.response.json().result).to.equal(1)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"arguments\": [0],\r\n    \"operation\": \"Fact\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8496/independent/calculate",
					"host": [
						"localhost"
					],
					"port": "8496",
					"path": [
						"independent",
						"calculate"
					]
				}
			},
			"response": []
		},
		{
			"name": "Fact Fail",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Correct Result\", function () {\r",
							"    console.log(\"This is a test \" + pm.response.text());\r",
							"    pm.response.to.have.status(409)\r",
							"    pm.response.to.have.jsonBody(\"error-message\")\r",
							"    pm.expect(pm.response.json()[\"error-message\"]).to.equal(\"Error while performing operation Factorial: not supported for the negative number\")\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"arguments\": [-3],\r\n    \"operation\": \"Fact\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8496/independent/calculate",
					"host": [
						"localhost"
					],
					"port": "8496",
					"path": [
						"independent",
						"calculate"
					]
				}
			},
			"response": []
		}
	]
}